// automatically generated by the FlatBuffers compiler, do not modify

package br.com.rbcti.publisher.common.messages.fbs;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class HeaderFbs extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static HeaderFbs getRootAsHeaderFbs(ByteBuffer _bb) { return getRootAsHeaderFbs(_bb, new HeaderFbs()); }
  public static HeaderFbs getRootAsHeaderFbs(ByteBuffer _bb, HeaderFbs obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public HeaderFbs __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int messageId() { int o = __offset(4); return o != 0 ? bb.getShort(o + bb_pos) & 0xFFFF : 0; }
  public int version() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) & 0xFF : 0; }
  public long usn() { int o = __offset(8); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }

  public static int createHeaderFbs(FlatBufferBuilder builder,
      int messageId,
      int version,
      long usn) {
    builder.startTable(3);
    HeaderFbs.addUsn(builder, usn);
    HeaderFbs.addMessageId(builder, messageId);
    HeaderFbs.addVersion(builder, version);
    return HeaderFbs.endHeaderFbs(builder);
  }

  public static void startHeaderFbs(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addMessageId(FlatBufferBuilder builder, int messageId) { builder.addShort(0, (short) messageId, (short) 0); }
  public static void addVersion(FlatBufferBuilder builder, int version) { builder.addByte(1, (byte) version, (byte) 0); }
  public static void addUsn(FlatBufferBuilder builder, long usn) { builder.addLong(2, usn, 0L); }
  public static int endHeaderFbs(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public HeaderFbs get(int j) { return get(new HeaderFbs(), j); }
    public HeaderFbs get(HeaderFbs obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

